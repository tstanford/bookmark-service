apiVersion: apps/v1
kind: Deployment
metadata:
  name: bookmark-service
  namespace: ns-bookmark-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bookmark-service
  template:
    metadata:
      labels:
        app: bookmark-service
    spec:
      containers:
        - name: bookmark-service
          image: {{ .Values.bookmarkService.image }}:{{ .Values.bookmarkService.tag }}
          ports:
            - containerPort: {{ .Values.bookmarkService.port }}
          env:
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://{{ .Values.bookmarkService.env.POSTGRES_HOST }}:{{ .Values.bookmarkService.env.POSTGRES_PORT }}/{{ .Values.bookmarkService.env.POSTGRES_DB}}
            - name: SPRING_DATASOURCE_USERNAME
              value: {{ .Values.bookmarkService.env.POSTGRES_USER }}
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: password
          livenessProbe:
            httpGet:
              path: /manage/health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /manage/health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 20
          strategy:
            type: RollingUpdate
            rollingUpdate:
              maxUnavailable: 1
              maxSurge: 1